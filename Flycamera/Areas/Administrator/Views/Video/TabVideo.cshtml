@using Flycamera.App_Start
@model Flycamera.Areas.Administrator.ViewModel.VideoVM

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Administrator/Views/Shared/_Layout.cshtml";
}

<div class="titlePage">
    <div class="wrapper">
        <h1>Create Video</h1>
    </div>
</div> 
@section bodyContent{
    <div class="control-action">
    @Html.ActionLink("Back to List", "Index", null, new { @class = "button" })
</div>


@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    <div class="left-form">

        @*@if (Model != null && Model.Video.ProductId == 0)
        {
            *@<div class="editor-field">
                <label>Products</label>
                @Html.HiddenFor(m => m.Video.ProductId, new { @class = "valueID" })
                @Html.HiddenFor(m => m.Video.PositionID, new { @class = "valueID" })
                @Html.TextBoxFor(model => model.Video.ProductId, new { @class = "reviewProduct", @readonly = true })
                <a href="javascript:;" title="choose product" data-popup=".popup-product" class="button choseProduct">Choose Product</a>
                @Html.ValidationMessageFor(model => model.Video.ProductId)
            </div>
        @*}*@

        <div class="editor-field">
            <label>Position</label>
            @Html.DropDownListFor(model => model.positionVideo, Model.PositionGalleriesItemList, "Select Position")
        </div>

        <div class="editor-field">
            <label>VideosTitle</label>
            @Html.TextBoxFor(model => model.Video.VideosTitle,new { @placeholder=PlaceHolder.VideoTitle_ph})
            @Html.ValidationMessageFor(model => model.Video.VideosTitle)
        </div>

        <div class="editor-field">
            <label>VideosShortContent</label>
            @Html.TextAreaFor(model => model.Video.VideosShortContent,new { @placeholder=PlaceHolder.ShortContent_ph})
            @Html.ValidationMessageFor(model => model.Video.VideosShortContent)
        </div>

        <div class="editor-field">
            <label>VideosLink</label>
            @Html.TextBoxFor(model => model.Video.VideosLink,new { @placeholder=PlaceHolder.Link_ph})
            @Html.ValidationMessageFor(model => model.Video.VideosLink)
        </div>

        <div class="editor-field frm-upload--backgroundIMG">
            <label>Upload Image :</label>
            <ul class="frame-tabheader">
                <li>
                    <a href="#frame-tab--url" class="button active" title="URL">URL</a>
                </li>
                <li>
                    <a href="#frame-tab--pc" class="button" title="Computer">Computer</a>
                </li>
            </ul>
            <div class="frame-tab--content frame-tab--upload">

                <div id="frame-tab--url" class="frame-tab active">
                    @Html.TextBoxFor(model => model.Video.PictureID, new { @class = "imgLink SyncURLImageLink", @oninput = "onChangeTextboxImage(this,1)" })
                    <input type="button" class="btn-chose button btn-upload-img" value="Upload" onclick="BrowseServer();" />
                    @Html.ValidationMessageFor(model => model.Video.PictureID)
                </div>

                <div id="frame-tab--pc" class="frame-tab">
                    @Html.TextBoxFor(model => model.Video.PictureID, new { @class = "imgLink", @readonly = "readonly",@placeholder=PlaceHolder.VideoImage_ph })
                    <input type="button" class="btn-chose button" value="Choose Image" onclick="BrowseServer();" />
                    @Html.ValidationMessageFor(model => model.Video.PictureID)
                </div>
            </div>
        </div>

       @* <div class="editor-field">
            <label>Width</label>
            @Html.TextBoxFor(model => model.Video.Width)
            @Html.ValidationMessageFor(model => model.Video.Width)
        </div>

        <div class="editor-field">
            <label>Height</label>
            @Html.TextBoxFor(model => model.Video.Height)
            @Html.ValidationMessageFor(model => model.Video.Height)
        </div>*@

    </div>
    <div class="right-form">
        <div class="editor-field">
            <label>Picture</label>
            <img src="@Url.Content("/Content/images/sprite/no-image.png")" class="preview" width="350" height="200" />     
        </div>

        <div class="editor-field">
            <label class="boolean-label">Published</label>
            @Html.CheckBoxFor(m => m.isPublish, Model.isPublish)
            @Html.ValidationMessageFor(model => model.Video.Published)
        </div>

        <div class="editor-field">
            <label class="boolean-label">Deleted</label>
            @Html.CheckBoxFor(model => model.isDeleted,Model.isDeleted) 
            @Html.ValidationMessageFor(model => model.Video.Deleted)
        </div>

        <div class="editor-field">
            <label class="boolean-label">Show HomePage</label>
            @Html.CheckBoxFor(model => model.isHome,Model.isHome) 
            @Html.ValidationMessageFor(model => model.Video.isShowHome)
        </div>

        <div class="editor-field">
            <label>Order</label>
            @Html.TextBoxFor(model => model.Video.DisplayOrder,new { @placeholder=PlaceHolder.Link_ph})
            @Html.ValidationMessageFor(model => model.Video.DisplayOrder)
        </div>
    </div>
    <div class="editor-field">
			<label>Description</label>
            <ul class="frame-tabheader">
                <li><a href="#frame-tab--vi" class="button active" title="Tiếng Việt">Tiếng Việt</a></li>
                <li><a href="#frame-tab--en" class="button" title="English">English</a></li>
            </ul>
            <div class="frame-tab--content">
                <div id="frame-tab--vi" class="frame-tab active">
                    @Html.TextAreaFor(model => model.SectionContents.FullDescription, new { @id = "editor" })
                </div>
                <div id="frame-tab--en" class="frame-tab">
                    @Html.TextAreaFor(model => model.SectionContents.FullDescription_EN, new { @id = "editor1" })
                </div>
            </div>
        </div>
    <div class="control-action">
        <input type="submit" value="Submit" class="button" />
    </div>
}
    

}
@section Scripts {
    @{Html.RenderPartial(@StaticVariableAdministrator._popupChooseProducts);}
}
